{
	"name": "DF_gg1storage21",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Storage_gg1storage21_PO",
						"type": "DatasetReference"
					},
					"name": "Purchaseorder"
				},
				{
					"dataset": {
						"referenceName": "DS_Storage_gg1storage21_customer",
						"type": "DatasetReference"
					},
					"name": "Customer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DB_ggdb21_DF_Target",
						"type": "DatasetReference"
					},
					"name": "ProductPurchases"
				}
			],
			"transformations": [
				{
					"name": "PODataprojection"
				},
				{
					"name": "CustomerDataprojection"
				},
				{
					"name": "Datacheckquantity"
				},
				{
					"name": "joinPOCustomerstreams"
				},
				{
					"name": "POpurchases"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PurchaseOrderID as integer,",
				"          CustomerCode as integer,",
				"          ProductCode as string,",
				"          PuchaseOrderDate as string,",
				"          Quantity as integer,",
				"          UnitPrice as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Purchaseorder",
				"source(output(",
				"          CustomerCode as integer,",
				"          CustomerName as string,",
				"          Address as string,",
				"          PhoneNumber as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customer",
				"Purchaseorder select(mapColumn(",
				"          CustomerCode,",
				"          Quantity",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> PODataprojection",
				"Customer select(mapColumn(",
				"          CustomerCode,",
				"          CustomerName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CustomerDataprojection",
				"PODataprojection filter(greater(Quantity, 0)) ~> Datacheckquantity",
				"Datacheckquantity, CustomerDataprojection join(PODataprojection@CustomerCode == CustomerDataprojection@CustomerCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinPOCustomerstreams",
				"joinPOCustomerstreams aggregate(groupBy(PODataprojection@CustomerCode,",
				"          CustomerName),",
				"     Purchases1 = sum(Quantity)) ~> POpurchases",
				"POpurchases sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          customer_code as integer,",
				"          customer_name as string,",
				"          Purchases as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customer_code = CustomerCode,",
				"          customer_name = CustomerName,",
				"          Purchases = Purchases1",
				"     )) ~> ProductPurchases"
			]
		}
	}
}