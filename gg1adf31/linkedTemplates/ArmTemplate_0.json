{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gg1adf31"
		},
		"LS_ADLS_gg1adls3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_gg1adls3'"
		},
		"LS_DB_ggdb1source_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_DB_ggdb1source'"
		},
		"LS_Storage_gg1storage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Storage_gg1storage3'"
		},
		"LS_ADLS_gg1adls3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gg1adls3.dfs.core.windows.net/"
		},
		"LS_DB_ggdb1source_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ggouddbserver.database.windows.net"
		},
		"LS_DB_ggdb1source_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ggdb1source"
		},
		"LS_DB_ggdb1source_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ggouddbserver"
		},
		"LS_HTTP_GIT_gcmgoud_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/gcmgoud6/gitpractice2/raw/main/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_gg1adls3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_gg1adls3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_gg1adls3_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DB_ggdb1source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_DB_ggdb1source_properties_typeProperties_server')]",
					"database": "[parameters('LS_DB_ggdb1source_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_DB_ggdb1source_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_DB_ggdb1source_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_HTTP_GIT_gcmgoud')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_HTTP_GIT_gcmgoud_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Storage_gg1storage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_Storage_gg1storage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DB_Employee_WithOutDuplicates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DB_ggdb1source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DBO",
					"table": "EmployeeWithOutDuplicates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DB_ggdb1source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_adf1_input_Employee1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_gg1adls3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employee1.csv",
						"fileSystem": "adf1-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMP-ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Designation",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_gg1adls3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_adf1_input_Employee2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_gg1adls3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employee2.csv",
						"fileSystem": "adf1-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMP-ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Designation",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_gg1adls3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_dropduplicates')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_adf1_input_Employee1",
								"type": "DatasetReference"
							},
							"name": "Employee1"
						},
						{
							"dataset": {
								"referenceName": "DS_adf1_input_Employee2",
								"type": "DatasetReference"
							},
							"name": "Employee2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_DB_Employee_WithOutDuplicates",
								"type": "DatasetReference"
							},
							"name": "LoadingIntoDB"
						}
					],
					"transformations": [
						{
							"name": "AllRecords"
						},
						{
							"name": "dropduplicates"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {EMP-ID} as integer,",
						"          Name as string,",
						"          Designation as string,",
						"          Salary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee1",
						"source(output(",
						"          {EMP-ID} as integer,",
						"          Name as string,",
						"          Designation as string,",
						"          Salary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee2",
						"Employee1, Employee2 union(byName: true)~> AllRecords",
						"AllRecords aggregate(groupBy({EMP-ID}),",
						"     each(match(name!='EMP-ID'), $$ = first($$))) ~> dropduplicates",
						"dropduplicates sort(asc({EMP-ID}, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {EMP-ID},",
						"          Name,",
						"          Designation,",
						"          Salary",
						"     )) ~> LoadingIntoDB"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_adf1_input_Employee1')]",
				"[concat(variables('factoryId'), '/datasets/DS_adf1_input_Employee2')]",
				"[concat(variables('factoryId'), '/datasets/DS_DB_Employee_WithOutDuplicates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_dropDuplicates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DropDuplicates",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_dropduplicates",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee1": {},
									"Employee2": {},
									"LoadingIntoDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_dropduplicates')]"
			]
		}
	]
}